spring:
  application:
    name: spring-batch-kafka
  datasource:
    password: secret
    username: myuser
    url: jdbc:postgresql://localhost:5432/fourniture
  kafka:
    bootstrap-servers: localhost:29092
    listener:
      observation-enabled: true
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: "group-3"
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.example.model.Commande
  batch:
    jdbc:
      initialize-schema: always
    job:
      name: filtrageJob
  sql:
    init:
      mode: always
  cloud:
    gcp:
      project-id: emulator

batch-kafka:
  reader:
    partitions:
      - 0
      - 1
      - 2
    process-name: retrieveCommande
    poll-timeout: 5
    topic: appro-event

batch-storage:
  writer:
    bucket-name: bucket-fourniture
    retry-write:
      max-attempts: 20
      delay: 50
      max-delay: 10000

batch-postgres:
  reader:
    process-name: retrieve-fourniture
    fetch-size: 50